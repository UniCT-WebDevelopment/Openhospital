package com.openhospital.productservice.beans.proposals.get;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.openhospital.productservice.beans.GenericOutput;
import com.openhospital.productservice.beans.Result;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import lombok.ToString;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * Output fields structure
 */
@ApiModel(description = "Output fields structure")
@ToString
public class GetProposalsOutput extends GenericOutput {
  @JsonProperty("proposals")
  private List<OutputProposal> proposals = null;

  public GetProposalsOutput result(Result result) {
    this.result = result;
    return this;
  }

  public GetProposalsOutput proposals(List<OutputProposal> proposals) {
    this.proposals = proposals;
    return this;
  }

  public GetProposalsOutput addProposalsItem(OutputProposal proposalsItem) {
    if (this.proposals == null) {
      this.proposals = new ArrayList<OutputProposal>();
    }
    this.proposals.add(proposalsItem);
    return this;
  }

   /**
   * Proposals array generated by the system
   * @return proposals
  **/
  @ApiModelProperty(value = "Proposals array generated by the system")
  public List<OutputProposal> getProposals() {
    return proposals;
  }

  public void setProposals(List<OutputProposal> proposals) {
    this.proposals = proposals;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetProposalsOutput getProposalsOutput = (GetProposalsOutput) o;
    return Objects.equals(this.result, getProposalsOutput.result) &&
        Objects.equals(this.proposals, getProposalsOutput.proposals);
  }

  @Override
  public int hashCode() {
    return Objects.hash(result, proposals);
  }

  public String toStringVerbose() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetProposalsOutput {\n");
    
    sb.append("    result: ").append(toIndentedString(result)).append("\n");
    sb.append("    proposals: ").append(toIndentedString(proposals)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

